#!/usr/bin/env node
// {{generated_message}}

const fs = require('fs')
const path = require('path')

;(function hookEntryPoint() {
  const ghooks = getGhooksEntryPoint()
  checkForGHooks(ghooks)
  require(ghooks)(__dirname, __filename)
})()

function getGhooksEntryPoint() {
  const worktree = getWorkTree()
  if (worktree) {
    return path.resolve(__dirname, '../', worktree, 'node_modules', 'ghooks')
  }
  return 'ghooks'
}

function checkForGHooks(ghooks) {
  try {
    require(ghooks)
  } catch (e) {
    warnAboutGHooks()
    process.exit(1)
  }
}

function getWorkTree() {
  try {
    return getWorkTreeFromConfig(getConfigFileContent())
  } catch (e) {
    return ''
  }
}

function getConfigFileContent() {
  const configFile = path.resolve(__dirname, '../config')
  const fileStat = fs.statSync(configFile)
  if (fileStat && fileStat.isFile()) {
    return fs.readFileSync(configFile, 'utf8')
  }
  return ''
}

function getWorkTreeFromConfig(configFileContent) {
  const worktreeRegEx = /\[core\][^]{0,}worktree = ([^\n]{1,})[^]{0,}/
  return worktreeRegEx.test(configFileContent) ? configFileContent.replace(worktreeRegEx, '$1') : ''
}

function warnAboutGHooks() {
  console.warn( // eslint-disable-line no-console
    'ghooks not found!\n' +
    'Make sure you have it installed on your "node_modules".\n' +
    'Skipping git hooks.'
  )
}
